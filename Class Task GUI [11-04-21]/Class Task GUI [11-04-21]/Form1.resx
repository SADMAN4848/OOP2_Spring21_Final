<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYG
        BwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoK
        CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCABUAFQDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9/KGYKMmgkKNxr43/AOCov/BUbS/2NtOs/g58G9Kt/FPxe8UQ
        r/wj3h9pB5Olxudi3t6cgKm/hIyV8xhyVUE11YPB4jH4hUaKV9W22kklq5Sb0jFLVt6JHNjMXQwOHdas
        7JfNt9El1b6JHtX7WX7dH7M37FXgtPGXx9+JFtphutw0nR7dTcahqbj+C3tk+eTnjdwgP3mFfnr8bv8A
        gtl+2r8W3m/4Zj+BWj/DDw9H4hsNGm8TfEaFrzVIZLtovKmaxQbYI9s8TlnDjDjDE8V8Q+E/ib8NfHmq
        +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
</value>
  </data>
</root>